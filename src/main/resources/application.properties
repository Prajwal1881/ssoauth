# ===============================================
# SERVER CONFIGURATION
# ===============================================
server.port=8080


# ===============================================
# DATABASE (POSTGRESQL) & JPA CONFIGURATION
# ===============================================
# --- Datasource Properties ---
spring.datasource.url=jdbc:postgresql://localhost:5432/sso_auth_db
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver

# Disables Thymeleaf template caching
spring.thymeleaf.cache=false

# --- JPA / Hibernate Properties ---
# 'update' will update the schema if it changes, without dropping data.
# 'validate' will check the schema and fail on mismatch.
# 'create' will drop and re-create tables every time (good for testing, bad for prod).
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


# ===============================================
# LOCAL JWT TOKEN CONFIGURATION
# (Used by your custom JwtTokenProvider.java)
# ===============================================
# Use a strong, base64-encoded secret.
jwt.secret=YOUR_REALLY_STRONG_JWT_SECRET_KEY_REPLACE_THIS
# 1 hour (in milliseconds)
jwt.expiration=3600000
# 1 day (in milliseconds)
jwt.refresh-expiration=86400000
# ===============================================
# OIDC/OAUTH2 CLIENT CONFIGURATION (FOR MINIORANGE)
# ===============================================

# 1. Registration Details
# Note the Client ID now ends with a capital 'O' to match your dashboard
spring.security.oauth2.client.registration.miniorange.client-id=xVTUDkijYwaFXs5hqsGxSyjAu0kdMpk4
spring.security.oauth2.client.registration.miniorange.client-secret=sfos27LG32QnFcM4ROyPnGGuPdYkUKgB
spring.security.oauth2.client.registration.miniorange.provider=miniorange-provider
spring.security.oauth2.client.registration.miniorange.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.miniorange.scope=openid,profile,email

# !!! THIS IS THE MAIN FIX !!!
# This tells Spring to build the "http://localhost:8080/..." URL
    spring.security.oauth2.client.registration.miniorange.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

spring.security.oauth2.client.registration.miniorange.client-name=MiniOrange

# 2. Provider Details
# (These authorization/token/userinfo URLs are correct)
spring.security.oauth2.client.provider.miniorange-provider.authorization-uri=https://csumairkhan.xecurify.com/moas/idp/openidsso
spring.security.oauth2.client.provider.miniorange-provider.token-uri=https://csumairkhan.xecurify.com/moas/rest/oauth/token
spring.security.oauth2.client.provider.miniorange-provider.user-info-uri=https://csumairkhan.xecurify.com/moas/rest/oauth/getuserinfo
spring.security.oauth2.client.provider.miniorange-provider.user-name-attribute=email

# Note the JWKS URL also now uses the correct Client ID (with a capital 'O')
spring.security.oauth2.client.provider.miniorange-provider.jwk-set-uri=https://csumairkhan.xecurify.com/moas/discovery/v2.0/xVTUDkijYwaFXs5hqsGxSyjAu0kdMpk4/.well-known/jwks

# =======================================
# NEW MANUAL JWT SSO FLOW CONFIG
# =======================================
# The specific SSO URL from miniOrange
miniorange.jwt.sso.url=https://csumairkhan.xecurify.com/moas/idp/jwtsso/379422
miniorange.jwt.redirect.uri=http://localhost:8080/login/jwt/callback
miniorange.jwt.client.id=fYSKzurMcrSPnTbOlJQc2542cJnDv2dv
miniorange.jwt.client.secret=mNDFdpY2tpqrV9sWfZr8TSRIciFRt4It
# Path to the certificate file from miniOrange
# Place this file (e.g., miniorange_jwt.cer) in src/main/resources
miniorange.jwt.certificate.path=classpath:miniorange_jwt.cer
